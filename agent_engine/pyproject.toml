[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "disaster-response-agent-engine"
version = "1.0.0"
description = "Vertex AI Agent Engine deployment for disaster response multi-agent system"
readme = "README_AGENT_ENGINE.md"
license = {text = "MIT"}
authors = [
    {name = "Disaster Response Team"}
]
keywords = ["disaster-response", "vertex-ai", "agent-engine", "google-adk", "bigquery"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "google-adk==1.0.0",
    "google-cloud-bigquery==3.12.0",
    "google-cloud-aiplatform==1.38.1",
    "fastapi==0.104.1",
    "pydantic==2.5.0",
    "uvicorn[standard]==0.24.0",
    "python-multipart==0.0.6",
    "httpx==0.25.2",
    "python-dotenv==1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "black==23.11.0",
    "isort==5.12.0",
    "flake8==6.1.0",
    "flake8-docstrings==1.7.0",
    "mypy==1.7.1",
    "pre-commit==3.5.0",
    "bandit==1.7.5"
]
docs = [
    "sphinx==7.2.6",
    "sphinx-rtd-theme==1.3.0"
]
test = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0"
]

[project.urls]
Homepage = "https://github.com/your-org/disaster-response-system"
Documentation = "https://github.com/your-org/disaster-response-system/blob/main/agent_engine/README_AGENT_ENGINE.md"
Repository = "https://github.com/your-org/disaster-response-system"
Issues = "https://github.com/your-org/disaster-response-system/issues"

[project.scripts]
disaster-response-agent = "agent_engine.agent:main"

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agent_engine"]
known_third_party = ["google", "fastapi", "pydantic", "uvicorn"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "google.adk.*",
    "google.cloud.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=agent_engine",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["agent_engine"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
max-complexity = 10
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:D"
] 